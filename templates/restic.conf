#!/bin/bash

{% if restic_protocol == 'swift' %}
# To use an Openstack cloud you need to authenticate against keystone, which
# returns a **Token** and **Service Catalog**. The catalog contains the
# endpoint for all services the user/tenant has access to - including nova,
# glance, keystone, swift.
#
export OS_AUTH_URL={{ restic_os_auth_url | quote }}

# With the addition of Keystone we have standardized on the term **tenant**
# as the entity that owns the resources.
export OS_TENANT_ID={{ restic_os_tenant_id | quote }}
export OS_TENANT_NAME={{ restic_os_tenant_name | quote }}

# valeurs par d√©faut
export OS_USER_DOMAIN_NAME={{ restic_os_user_domain_name | default('Default') | quote }}
export OS_PROJECT_DOMAIN_NAME={{ restic_os_project_domain_name | default('Default') | quote }}

# In addition to the owning entity (tenant), openstack stores the entity
# performing the action as the **user**.
export OS_USERNAME={{ restic_os_user | quote }}

# With Keystone you pass the keystone password.
export OS_PASSWORD={{ restic_os_password | quote }}

# If your configuration has multiple regions, we set that information here.
# OS_REGION_NAME is optional and only valid in certain environments.
export OS_REGION_NAME={{ restic_os_region_name | quote }}
# Don't leave a blank variable, unset it if it was empty
if [ -z "$OS_REGION_NAME" ]; then unset OS_REGION_NAME; fi

export RESTIC_REPOSITORY={{ restic_protocol | quote }}:{{ restic_os_container | quote }}:/
{% endif %}

{% if restic_protocol == 's3' %}
export AWS_ACCESS_KEY_ID={{ restic_s3_user }}
export AWS_SECRET_ACCESS_KEY={{ restic_s3_password }}

export RESTIC_REPOSITORY={{ restic_protocol | quote }}:{{ restic_s3_url | quote }}/{{ restic_s3_container | quote }}
{% endif %}
export RESTIC_PASSWORD_FILE={{ restic_password_file | quote }}
