#! /bin/bash

# date to add to result so that we can detect cached result
DATE="$( date '+%Y/%m/%d %H:%M:%S' )"

# usage : WARNING_THRESHOLD CRITICAL_THRESHOLD [minage] [maxunknown]
[ "$#" -lt "2" ] && { echo "UNKNOWN bad arguments: $@"; exit 0; }
WARNING_THRESHOLD=$1
shift
CRITICAL_THRESHOLD=$1

[ "${WARNING_THRESHOLD}" -gt "${CRITICAL_THRESHOLD}" ] && { echo "UNKNOWN bad arguments: CRITICAL ${CRITICAL_THRESHOLD} < WARNING ${WARNING_THRESHOLD}"; exit 0; }

THIS="$( readlink -f "${BASH_SOURCE[0]}" )"
DIR="$( dirname "$THIS" )"
check_script=check-age

source "$DIR/check-restic-common"

# full line
SNAPSHOT_INFO="$( restic snapshots -c --no-lock --host "$( hostname )" latest | grep -E '^[a-z0-9]{8,}' )"
[ -z "${SNAPSHOT_INFO}" ] && { echo "UNKNOWN backup age cannot be extracted - ${SNAPSHOT_INFO}"; exit 3; }
# only date
SNAPSHOT_DATE="$( echo "${SNAPSHOT_INFO}" | grep -o -E '[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}' )"
SNAPSHOT_TIMESTAMP="$( date -d "${SNAPSHOT_DATE}" '+%s' )"
NOW_TIMESTAMP="$( date '+%s' )"
SNAPSHOT_AGE="$(( ( ${NOW_TIMESTAMP} - ${SNAPSHOT_TIMESTAMP} ) / 3600 ))"

[ -z "${SNAPSHOT_AGE}" ] && { echo "UNKNOWN $DATE - backup age cannot be extracted - ${SNAPSHOT_INFO}" > "${OUTPUT_FILE}"; exit_clean_temp $UNKNOWN; }
[ "${SNAPSHOT_AGE}" -gt "${CRITICAL_THRESHOLD}" ] && { echo "CRITICAL $DATE - outdated backup ${SNAPSHOT_AGE} > ${CRITICAL} hours - ${SNAPSHOT_INFO}" > "${OUTPUT_FILE}"; exit_clean_temp $CRITICAL; }
[ "${SNAPSHOT_AGE}" -gt "${WARNING_THRESHOLD}" ] && { echo "CRITICAL $DATE - outdated backup ${SNAPSHOT_AGE} > ${WARNING_THRESHOLD} hours - ${SNAPSHOT_INFO}" > "${OUTPUT_FILE}"; exit_clean_temp $WARNING; }
echo "OK $DATE - snapshot age ${SNAPSHOT_AGE} hours  - ${SNAPSHOT_INFO}" > "${OUTPUT_FILE}";
exit_clean_temp $OK;
